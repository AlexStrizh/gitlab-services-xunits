#Область ОписаниеСервисов

// @unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуСуществует(Фреймворк) Экспорт
	
	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Фреймворк.ПроверитьЗаполненность(URL, "Не указан URL, проверьте user_settings.json.");
	Фреймворк.ПроверитьЛожь(ПустаяСтрока(URL), "URL не может быть пустым, проверьте user_settings.json.");
	
	Шаблон = СтрШаблон("а = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(""%1"")", URL);
	Фреймворк.ПроверитьВыполнилось(Шаблон);
	
	URL = "йохохо";
	Шаблон = СтрШаблон("а = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(""%1"")", URL);
	Фреймворк.ПроверитьНеВыполнилось(Шаблон, "Ошибка работы с Интернет:   Couldn't resolve host name");
	
КонецПроцедуры

// @unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуДолженВозвращатьНеопределеноЕслиПараметрФэйл(Фреймворк) Экспорт
	
	URL = "";
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено");
	
	URL = Новый Массив;
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено");
	
КонецПроцедуры

//@unit-test
Процедура Тест_ОткликВебСервиса(Фреймворк) Экспорт
	
	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Ответ"));
	Фреймворк.ПроверитьТип(Ответ.Ответ, "Структура", "Веб-сервис не отвечает.");
	Фреймворк.ПроверитьЗаполненность(Ответ.Ответ, "Ответ веб-сервиса не должен быть пустым.");
	Фреймворк.ПроверитьРавенство(Ответ.Ответ.КодСостояния, 200, "Веб-сервис отвечает, но с ошибкой.");

КонецПроцедуры

//@unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуВозвращаетКорректнуюСтруктуруДанных(Фреймворк) Экспорт
	
	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьРавенство(Ответ.Количество(), 3);
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Ответ"));
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Соответствие"));
	Фреймворк.ПроверитьИстину(Ответ.Свойство("json"));
	
	URL = URL + "йохохо";
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено", "При ошибочном имени сервиса должно вернуться Неопределено.");
	
КонецПроцедуры

//@unit-test
Процедура Тест_МетодПолученияОписанияВебСервисПоАдресуПроверкаНаСвойствоEnabled(Фреймворк) Экспорт
	
	КорневойURLСервисовGitLab = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("КорневойURLСервисовGitLab");
	Фреймворк.ПроверитьЗаполненность(ПустаяСтрока(КорневойURLСервисовGitLab),
		"Не указан КорневойURLСервисовGitLab, проверьте user_settings.json.");
	Фреймворк.ПроверитьЛожь(ПустаяСтрока(КорневойURLСервисовGitLab),
		"КорневойURLСервисовGitLab не может быть пустым, проверьте user_settings.json.");
	
	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	ОписаниеСервиса = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаВызовСервера(КорневойURLСервисовGitLab);
	Фреймворк.ПроверитьТип(ОписаниеСервиса, "Структура");
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("enabled"));	
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьРавенство(ОписаниеСервиса.Свойство("enabled"), Ответ.Соответствие["services"].Получить("enabled"));

КонецПроцедуры

//@unit-test
Процедура Тест_МетодОписаниеСервисаСоответствуетЭталону(Фреймворк) Экспорт
	
	ИмяСервиса = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("КорневойURLСервисовGitLab");
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаВызовСервера(ИмяСервиса);

	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("tmp");	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ОткрытьФайл(ИмяВременногоФайла, КодировкаТекста.UTF8);
	ЗаписатьJSON(ЗаписьJSON, Ответ);
	ЗаписьJSON.Закрыть();

	ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
	ТекстОтвета = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	УдалитьФайлы(ИмяВременногоФайла);
	
	Фреймворк.ПроверитьЗаполненность(ТекстОтвета);
	
	ФайлЭталон = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("ЭталонОписанияСервисовJSON");
	ФайлЭталон = Тест_ОбщийМодульСервер.ПолучитьПолныйПуть(ФайлЭталон, Фреймворк.Объект.КаталогПроекта);
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ФайлЭталон, КодировкаТекста.UTF8);
	Эталон = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	Фреймворк.ПроверитьРавенство(ТекстОтвета, Эталон); 

КонецПроцедуры
	
#КонецОбласти